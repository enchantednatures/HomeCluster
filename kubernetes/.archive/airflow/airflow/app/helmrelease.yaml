---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: airflow
  namespace: &namespace airflow
spec:
  interval: 30m
  chart:
    spec:
      chart: airflow
      version: 1.15.0
      sourceRef:
        kind: HelmRepository
        name: airflow-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    createUserJob:
      useHelmHooks: false
      applyCustomEnv: false
    migrateDatabaseJob:
      useHelmHooks: false
      applyCustomEnv: false
    workers:
      keda:
       enabled: true
    ingress:
      web:
        enabled: true
        host: airflow.${SECRET_DOMAIN}
        ingressClassName: external
        tls:
          enabled: true
          secretName: airflow-tls
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # This should be the in-cluster DNS name for the authentik outpost service
          # as when the external URL is specified here, nginx will overwrite some crucial headers
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.enchantednatures.com/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;


      flower:
        enabled: true
        host: flower.${SECRET_DOMAIN}
        ingressClassName: external
        tls:
          enabled: true
          secretName: flower-tls
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # This should be the in-cluster DNS name for the authentik outpost service
          # as when the external URL is specified here, nginx will overwrite some crucial headers
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.enchantednatures.com/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;

