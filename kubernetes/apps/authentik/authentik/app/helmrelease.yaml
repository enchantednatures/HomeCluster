---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: authentik
      version: 2025.6.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  valuesFrom:
    - targetPath: authentik.secret_key
      kind: Secret
      name: authentik-secrets
      valuesKey: SECRET_KEY
    - targetPath: authentik.postgresql.password
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_PASSWORD
    - targetPath: authentik.postgresql.name
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_DATABASE_NAME
    - targetPath: authentik.postgresql.user
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_USER
    - targetPath: postgresql.postgresqlPassword
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_PASSWORD
    - targetPath: postgresql.postgresqlDatabase
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_DATABASE_NAME
    - targetPath: postgresql.postgresqlUsername
      kind: Secret
      name: authentik-secrets
      valuesKey: POSTGRES_USER
    - targetPath: authentik.redis.password
      kind: Secret
      name: authentik-secrets
      valuesKey: REDIS_PASSWORD
    - targetPath: authentik.redis.auth.password
      kind: Secret
      name: authentik-secrets
      valuesKey: REDIS_PASSWORD
    - targetPath: authentik.email.password
      kind: Secret
      name: authentik-secrets
      valuesKey: EMAIL_PASSWORD
    - targetPath: authentik.email.username
      kind: Secret
      name: authentik-secrets
      valuesKey: EMAIL_USERNAME
  values:
    clusterRole:
      enabled: true
    server:
      ingress:
        enabled: false
      resources:
        server:
          requests:
            cpu: 15m
            memory: 476M
        worker:
          requests:
            cpu: 15m
            memory: 512M
    geoip:
      enabled: false
    authentik:
      url: https://auth.${SECRET_DOMAIN}
      email:
        from: id@${SECRET_DOMAIN}
        host: smtp.gmail.com
        port: 465
        use_ssl: true
      error_reporting:
        enabled: false
      log_level: debug
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      postgresql:
        host: authentik-db-rw.authentik.svc.cluster.local
      redis:
        host: dragonfly.authentik.svc.cluster.local
      # Trust proxy headers for HTTPS detection
      web:
        trusted_proxies: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    postgresql:
      enabled: false
    redis:
      enabled: false
