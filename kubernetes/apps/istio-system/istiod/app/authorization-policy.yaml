---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-all-istio-system
  namespace: istio-system
spec:
  action: ALLOW
  rules:
    - {} # Empty rule matches all traffic
---
# Explicitly allow service-to-service communication
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-all-snail
  namespace: snail
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-kafka
  namespace: kafka
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-networking
  namespace: networking
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-redpanda
  namespace: redpanda
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-monitoring
  namespace: monitoring
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-authentik
  namespace: authentik
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-harbor
  namespace: harbor
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-knative
  namespace: knative
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-knative-serving
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-knative-eventing
  namespace: knative-eventing
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-postgres
  namespace: postgres
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-istio-ingress
  namespace: istio-ingress
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-kube-system
  namespace: kube-system
spec:
  action: ALLOW
  rules:
    - {}
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-all-flux-system
  namespace: flux-system
spec:
  action: ALLOW
  rules:
    - {}
---
# Allow access to Kubernetes API server from all namespaces
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: kubernetes-api-server
  namespace: istio-system
spec:
  host: kubernetes.default.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
# Removed problematic DestinationRule with IP host - causes validation error
# The kubernetes-api-server DestinationRule above is sufficient
---
# ServiceEntry to allow access to Kubernetes API server
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: kubernetes-api-server
  namespace: istio-system
spec:
  hosts:
    - kubernetes.default.svc.cluster.local
  ports:
    - number: 443
      name: https
      protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: STATIC
  endpoints:
    - address: "10.96.0.1"
