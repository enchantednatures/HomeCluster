apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka
  labels:
    strimzi.io/cluster: snail
spec:
  replicas: 3
  roles:
    - broker
    - controller
  storage:
    type: persistent-claim
    size: 50Gi
    class: csi-nfs
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: snail
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 3.7.0
    metadataVersion: 3.7-IV0
    # replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: ingress
        tls: true
        configuration:
          class: internal
          bootstrap:
            host: kafka-bootstrap.${SECRET_DOMAIN}
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-production
              acme.cert-manager.io/http01-edit-in-place: "true"
          brokers:
            - broker: 0
              host: kafka-0.${SECRET_DOMAIN}
            - broker: 1
              host: kafka-1.${SECRET_DOMAIN}
            - broker: 2
              host: kafka-2.${SECRET_DOMAIN}
          brokerCertChainAndKey:
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
            certificate: tls.crt
            key: tls.key
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      group.min.session.timeout.ms: 250
    # storage:
    #   type: persistent-claim
    #   size: 50Gi
    #   class: csi-nfs
  entityOperator:
    topicOperator: {}
    userOperator: {}
