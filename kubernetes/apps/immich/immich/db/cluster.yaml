---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-db
  namespace: immich
  labels:
    app.kubernetes.io/name: immich-db
spec:
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql versioning=redhat
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.3-v0.2.1
  inheritedMetadata:
    annotations:
      sidecar.istio.io/inject: "false"
  instances: 1
  storage:
    size: 10Gi
    storageClass: openebs-hostpath
  enableSuperuserAccess: true
  superuserSecret:
    name: immich-superuser
  startDelay: 30
  stopDelay: 100
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: restart
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    enableAlterSystem: true
  monitoring:
    enablePodMonitor: true
  managed:
    roles:
      - name: hunter
        ensure: present
        comment: Hunter
        login: true
        superuser: true
        passwordSecret:
          name: immich-db-hunter
        inRoles: [pg_monitor, pg_signal_backend]
      - name: postgresql_immich_pgsql
        ensure: present
        comment: immich
        login: true
        superuser: false
        passwordSecret:
          name: immich-db-user
        inRoles: [pg_monitor, pg_signal_backend]
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: http://minio-service.networking.svc.cluster.local:9768
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster immich-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  bootstrap:
    # initdb:
    #   database: immich
    #   owner: immich
    #   secret:
    #     name: immich-pg-user
    #   dataChecksums: true
    #   postInitApplicationSQL:
    #     - ALTER SYSTEM SET search_path TO "$user", public, vectors;
    #     - SET search_path TO "$user", public, vectors;
    #     - CREATE EXTENSION IF NOT EXISTS "vectors";
    #     - CREATE EXTENSION IF NOT EXISTS "cube";
    #     - CREATE EXTENSION IF NOT EXISTS "earthdistance";
    #     - ALTER SCHEMA vectors OWNER TO "immich";
    #     - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA vectors TO "immich";
    #     - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "immich";
    #     # - CREATE EXTENSION IF NOT EXISTS "vector";
    #     # - ALTER ROLE "immich" WITH "superuser";
    recovery:
      source: &previousCluster immich-v0
      database: immich
      owner: immich
      secret:
        name: immich-pg-user
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
