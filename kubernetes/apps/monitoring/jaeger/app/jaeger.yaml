apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jaeger-operator-cluster-role
rules:
  - apiGroups: [""]
    resources: ["namespaces", "ingressclasses"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jaeger-operator-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: jaeger-operator
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: jaeger-operator-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger
spec:
  strategy: production
  ingress:
    ingressClassName: external
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      external-dns.alpha.kubernetes.io/is-public: "true"
      external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
      # kubernetes.io/ingress.class: external
      kubernetes.io/tls-acme: "true"
    hosts:
      - &host jaeger.${SECRET_DOMAIN}
    tls:
      - hosts:
          - *host
        secretName: jaeger-tls
  collector:
    maxReplicas: 5
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: http://elasticsearch-es-http.elastic.svc.cluster.local:9200
        index-prefix: jaeger
    secretName: jaeger-es-secret
