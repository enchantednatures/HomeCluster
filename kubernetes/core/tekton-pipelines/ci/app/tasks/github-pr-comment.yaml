---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: github-pr-comment
  namespace: tekton-pipelines
spec:
  description: >-
    This task posts a comment to a GitHub PR with OpenTofu plan output.
  params:
    - name: REPO_FULL_NAME
      description: "The GitHub repository full name (e.g., my-org/my-repo)"
    - name: PR_NUMBER
      description: "The pull request number"
    - name: PLAN_FILE
      description: "The path to the text file containing the plan output"
      default: "plan.txt"
    - name: COMMENT_TITLE
      description: "Title for the comment"
      default: "OpenTofu Plan"
  workspaces:
    - name: plan-dir
      description: The directory containing the plan file.
  steps:
    - name: post-comment
      image: alpine/curl:latest
      workingDir: $(workspaces.plan-dir.path)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-token
              key: token
      script: |
        #!/usr/bin/env sh
        set -e

        echo "Posting plan to PR #$(params.PR_NUMBER) in repo $(params.REPO_FULL_NAME)"

        # Check if plan file exists
        if [ ! -f "$(params.PLAN_FILE)" ]; then
          echo "Plan file $(params.PLAN_FILE) not found"
          exit 1
        fi

        # Install jq for JSON processing
        apk add --no-cache jq

        # Read the plan output and format it for GitHub
        PLAN_BODY=$(cat "$(params.PLAN_FILE)")
        
        # Create the comment body with proper escaping
        COMMENT_BODY="### $(params.COMMENT_TITLE)

        \`\`\`diff
        ${PLAN_BODY}
        \`\`\`

        ---
        *Generated by Tekton Pipeline*"

        # Create JSON payload
        PAYLOAD=$(jq -n --arg body "$COMMENT_BODY" '{body: $body}')

        # Post the comment
        curl -s -S -X POST \
          -H "Authorization: token ${GITHUB_TOKEN}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD" \
          "https://api.github.com/repos/$(params.REPO_FULL_NAME)/issues/$(params.PR_NUMBER)/comments"

        echo "Comment posted successfully"