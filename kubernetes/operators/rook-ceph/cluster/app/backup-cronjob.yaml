---
# Automated backup job for critical Ceph data
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/batch/cronjob_v1.json
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ceph-backup
  namespace: rook-ceph
  labels:
    app.kubernetes.io/name: ceph-backup
    app.kubernetes.io/part-of: rook-ceph
    app.kubernetes.io/component: backup
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  startingDeadlineSeconds: 3600  # 1 hour
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 7200  # 2 hours timeout
      template:
        metadata:
          labels:
            app.kubernetes.io/name: ceph-backup
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: rook-ceph-cmd-reporter
          containers:
            - name: ceph-backup
              image: rook/ceph:v1.18.6
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
                - -c
                - |
                  set -euo pipefail

                  echo "Starting Ceph backup at $(date)"

                  # Export cluster map
                  ceph mon getmap -o /tmp/monmap-$(date +%Y%m%d-%H%M%S).bin

                  # Export OSD map
                  ceph osd getmap -o /tmp/osdmap-$(date +%Y%m%d-%H%M%S).bin

                  # Export CRUSH map
                  ceph osd getcrushmap -o /tmp/crushmap-$(date +%Y%m%d-%H%M%S).bin

                  # Export auth keys
                  ceph auth export > /tmp/auth-export-$(date +%Y%m%d-%H%M%S).txt

                  # Get cluster status
                  ceph status > /tmp/ceph-status-$(date +%Y%m%d-%H%M%S).txt
                  ceph health detail > /tmp/ceph-health-$(date +%Y%m%d-%H%M%S).txt

                  # List all files created
                  ls -la /tmp/

                  echo "Backup completed at $(date)"

                  # TODO: Upload to external storage (S3, etc.)
                  # aws s3 sync /tmp/ s3://your-backup-bucket/ceph-backups/$(date +%Y%m%d)/
              env:
                - name: ROOK_CEPH_MON_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rook-ceph-mon
                      key: mon-host
                - name: ROOK_CEPH_MON_INITIAL_MEMBERS
                  valueFrom:
                    secretKeyRef:
                      name: rook-ceph-mon
                      key: mon-initial-members
              volumeMounts:
                - name: ceph-config
                  mountPath: /etc/ceph
                  readOnly: true
                - name: backup-storage
                  mountPath: /tmp
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          volumes:
            - name: ceph-config
              secret:
                secretName: rook-ceph-mon
            - name: backup-storage
              emptyDir:
                sizeLimit: 1Gi
          tolerations:
            - effect: NoSchedule
              operator: Exists
            - effect: NoExecute
              operator: Exists
          nodeSelector:
            kubernetes.io/arch: amd64
